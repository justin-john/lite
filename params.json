{"name":"Yite","tagline":"A lite web framework for Node.js called Yite.","body":"Yite Web Framework for Node.js\r\n=====\r\n\r\n\r\nA lite web framework for Node.js called Yite. This framework helps to create web pages and web applications with Javascript in Controller-View Pattern.\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install yite\r\n```\r\n\r\n## Get Started\r\n\r\n#####  app.js\r\n```javascript\r\nvar http = require('http');\r\nvar yite = require('yite');\r\n\r\nyite.config({\r\n  templateEngine: 'swig',\r\n  errorFilePath: __dirname + '/views/error.html',\r\n  controller: __dirname + '/controller',\r\n  viewsRoutes: __dirname + '/view-paths'\r\n});\r\n\r\nhttp.createServer(function (request, response) {\r\n  yite.init(request, response);\r\n}).listen(3000);\r\n```\r\n\r\nThe yite application will listen on port 3000.\r\nThe `yite` will use some configs to set the application. It will set template engine, controller file path, viewRoutes file path, error file path etc in application. The yite supports [swig](http://paularmstrong.github.io/swig), [jade](http://jade-lang.com/) and [ejs](http://embeddedjs.com/) template engines. The npm module of template engine needs to required/installed in your application.\r\nAll filename(controller.js, view-paths.js) can be changed to your convenience.\r\n\r\nIf no yite configs are given, it will take the defaults values, which are same as above given yite configs. \r\n\r\n##### controller.js\r\n```javascript\r\nmodule.exports = (function () {\r\n    var _index = function(reqMethod, params) {\r\n        return {\r\n            test: 'testcvc',\r\n            users: ['Gewrt', 'Jim', 'Jane']\r\n        };\r\n    },_add = function(reqMethod, params) {\r\n        return {\r\n            pagename: 'awesome people',\r\n            authors: ['Paul', 'Jim', 'Jane']\r\n        };\r\n    }, _test = function(reqMethod, params) {\r\n        return {\r\n            pagename: 'awesome people',\r\n            authors: ['Paul', 'Jim', 'Jane']\r\n        };\r\n    }, _contact = function(reqMethod, params, req, res) {\r\n        var locals = {\r\n            pagename: 'awesome people',\r\n            authors: ['Justin', 'John', 'Mathews']\r\n        };\r\n        var data = res.getParsedFileData('views/home.html', locals);\r\n        res.writeHead(200, { 'Content-Type': 'text/html' });\r\n        res.end(data, 'utf-8');\r\n    };\r\n\r\n    return {\r\n        index: _index,\r\n        add: _add,\r\n        test: _test,\r\n        contact: _contact\r\n    }\r\n})();\r\n```\r\nThe controller file will return method to each request. Each method will have first argument as request method(GET or POST) and second argument as parameters passed in GET and POST request. Two more arguments(request and response objects) are given optionally, if end user needs any alternation in request and response handling.\r\nFor example, The `http://localhost:3000/add` request url will attach to `add` method in controller. We should specify the each method in controller file for each request(GET & POST).\r\nWe can override the default controller file path in yite configs.\r\nThe `http://localhost:3000/contact` request will be received in `_contact` method. This method is example of how to override default behaviour. Here `res.getParsedFileData` will return data with parsed object.\r\n\r\n##### view-paths.js\r\n```javascript\r\nmodule.exports = function (url, viewsHTMLPaths) {\r\n  var routeHTMLs = {\r\n    '/'     : '/views/index.html',\r\n    '/add'  : '/views/add.html',\r\n    '/home' : '/views/home.html'\r\n  };\r\n  return viewsHTMLPaths.set(url, routeHTMLs);\r\n};\r\n```\r\nThe view-paths file is used to map request route to HTML file.\r\nFor example, The `http://localhost:3000/add` will attach to `add.html` HTML file in views.\r\nWe can override the default view-paths file in yite configs.\r\n\r\nBy using above files we can start to create an application.\r\n\r\nIn examples folder of this repo, there is an example usage of yite in an application.\r\n\r\n### Working of Yite\r\n\r\nWhen user access a route(request url) like \"localhost:3000/home\", the request first passes to controller's method `home` in `controller.js` and return the response as json. But if we need to render a html page for corresponding route, then it needs to add map route in `view-paths.js` file. This will lead to parse the controller's json response into view html file using template engines. The final output will be locals object parsed in raw html.\r\n\r\n#### Some routing examples\r\n\r\n| URL                    | Request Method  | Controller Method | View Path Map                     | Explanation                                                                                                                                                                                                                                                          |\r\n|------------------------|:----------------|-------------------|:----------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\r\n| localhost:3000         | GET             |             index |'/'     : '/views/index.html'     | The route will check controller have method called `index`. The response is raw html which will be rendered with parsing json object from method |\r\n| localhost:3000/add     | POST            |               add |                                   | The route will check controller have method called `add`. It will return response as json object as no view mapping is given. |\r\n| localhost:3000/home    | GET             |              home |'/home' : '/views/home.html'      | The route will check controller have method called `home`. The view html will be rendered with parsing json object from method . |\r\n| localhost:3000/contact | GET/POST        |           contact |'/contact' : '/views/contact.html'   | The route will check controller have method called `contact`. The view html will be rendered with parsing json object from method .  |\r\n| localhost:3000/contact | GET/POST        |           contact |                                   | The route will check controller have method called `contact`. It will return response as json object.  |\r\n\r\n### API Reference\r\n\r\n#####res.getParsedFileData(path, [locals object], [encoding])\r\nThis method returns data parsed by object to create dynamic file content from template engines. The arguments will `path`\r\nfor file path, `locals` the objects which parse in file for creating dynamic file and `encoding` is optional, which defaults\r\nto `utf8` encoding.\r\n\r\n### Relases Notes\r\nYite is still an experimental version.\r\n\r\nWant to improve the yite stuff, please donâ€™t hesitate to fork and make a [Pull Request](https://github.com/justin-john/yite/pulls). If you have any questions, thoughts, concerns or feedback, please don't hesitate to create an [issue](https://github.com/justin-john/yite/issues).\r\nYour suggestions are always welcome!\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Justin John Mathews <justinjohnmathews@gmail.com>\r\n","google":"UA-54151520-1","note":"Don't delete this file! It's used internally to help with page regeneration."}